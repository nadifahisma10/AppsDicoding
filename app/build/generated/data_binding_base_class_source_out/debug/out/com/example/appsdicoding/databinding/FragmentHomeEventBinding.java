// Generated by view binder compiler. Do not edit!
package com.example.appsdicoding.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.SearchView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appsdicoding.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Text1;

  @NonNull
  public final TextView labelActiveEvents;

  @NonNull
  public final TextView labelPastEvents;

  @NonNull
  public final ProgressBar progressBarHome;

  @NonNull
  public final ProgressBar progressBarSearch;

  @NonNull
  public final RecyclerView recyclerViewActive;

  @NonNull
  public final RecyclerView recyclerViewPast;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final TextView welcomeText;

  private FragmentHomeEventBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Text1,
      @NonNull TextView labelActiveEvents, @NonNull TextView labelPastEvents,
      @NonNull ProgressBar progressBarHome, @NonNull ProgressBar progressBarSearch,
      @NonNull RecyclerView recyclerViewActive, @NonNull RecyclerView recyclerViewPast,
      @NonNull SearchView searchView, @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.Text1 = Text1;
    this.labelActiveEvents = labelActiveEvents;
    this.labelPastEvents = labelPastEvents;
    this.progressBarHome = progressBarHome;
    this.progressBarSearch = progressBarSearch;
    this.recyclerViewActive = recyclerViewActive;
    this.recyclerViewPast = recyclerViewPast;
    this.searchView = searchView;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Text1;
      TextView Text1 = ViewBindings.findChildViewById(rootView, id);
      if (Text1 == null) {
        break missingId;
      }

      id = R.id.labelActiveEvents;
      TextView labelActiveEvents = ViewBindings.findChildViewById(rootView, id);
      if (labelActiveEvents == null) {
        break missingId;
      }

      id = R.id.labelPastEvents;
      TextView labelPastEvents = ViewBindings.findChildViewById(rootView, id);
      if (labelPastEvents == null) {
        break missingId;
      }

      id = R.id.progressBarHome;
      ProgressBar progressBarHome = ViewBindings.findChildViewById(rootView, id);
      if (progressBarHome == null) {
        break missingId;
      }

      id = R.id.progressBarSearch;
      ProgressBar progressBarSearch = ViewBindings.findChildViewById(rootView, id);
      if (progressBarSearch == null) {
        break missingId;
      }

      id = R.id.recyclerViewActive;
      RecyclerView recyclerViewActive = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewActive == null) {
        break missingId;
      }

      id = R.id.recyclerViewPast;
      RecyclerView recyclerViewPast = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewPast == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.welcomeText;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new FragmentHomeEventBinding((ConstraintLayout) rootView, Text1, labelActiveEvents,
          labelPastEvents, progressBarHome, progressBarSearch, recyclerViewActive, recyclerViewPast,
          searchView, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
